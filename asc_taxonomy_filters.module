<?php

function asc_taxonomy_filters_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {
    case 'list':

      $blocks[-1]['info'] = t('Active Filters');
      $blocks[-1]['cache'] = BLOCK_NO_CACHE;

      //Set block info for each term.
      $vocabularies = taxonomy_load_multiple();
      foreach ($vocabularies as $vocab) {
          $blocks[$vocab['vid']]['info'] = t('Term Filter: ' . $vocab['name']);
      }

      return $blocks;

    case 'view':
      //Active Filters Block Lists Active Terms from URL.
      if ($delta == -1) {
        $term_names = array();
        $term_ids = DO SOMETHING TO GET IDS FROM GET

        foreach ($term_ids as $term_id) {
          $term = taxonomy_get_term($term_id);
          $term_names[] = $term->name;
        }

        $block['subject'] = t('Active Filters');
        $block['content'] = theme('item_list',$term_names);
      }

      else {
        //Delta should be VID.
        $vocab = taxonomy_vocabulary_load($delta);

        $list = array();
        $list = build_filter_list($delta);

        $block['content'] = theme('item_list',$list);
        $block['subject'] = "Filter by " . $vocab['name'];
      }

      return $block;
  }
}

function construct_querystring($vocabulary) {
  $string = "?";
  foreach ($_GET as $get => $value) {
    if ($get != 'q' && $get != $vocabulary) {
      $string .= $get . "=" . $value . "&";
    }
  }
  return $string;
}

function build_filter_list($vid) {

  //Get URL without /1+2+3
  $section = asc_get_current_section();

  //Get all terms for this vid.
  $terms = taxonomy_get_tree($vid);

  //Add first list item.
  $list[] = '<a href="'. $section . '/">All</a>';

  //List of current terms to check for active.
  $active_term_list = asc_get_active_terms();

  $qs = implode('+',$active_term_list);

  //Build an array of parents of active terms.
  $active_parents = array();
  foreach ($active_term_list as $active_term) {
    foreach (taxonomy_get_parents($active_term->tid) as $parent){
        $active_parents[] = $parent->tid;
    }
  }

  foreach ($terms as &$term) {
    //Apply active class if this term is active in URL.
    (in_array($term->tid, $current_term_list)) ? $classes = "active" : $classes = "";
    // Check to see if current term, parents or siblings are active. Otherwise, don't render unless top level.
    if (in_array($term->parents[0]->tid, $active_term_list) ||
                is_parent_active($active_parents, $active_term_list) {}
      $list[$term->parents[0]]["children"][] = '<a class="' . $classes . '" href="/' . $section .
          '/' . $qs . '+' . $term->tid . '">' . $term->name . '</a>';
    }

    // Display all top level terms.
    elseif ($term->parents[0] == 0) {
      $list[$term->tid][] = '<a class="' . $classes . '" href="/' . $section . '/' . $qs '+' .     $term->tid . '">' . $term->name . '</a>';
    }
  }
  return($list);
}

/**
 * is_parent_active
 *   In php 5.4.2 this can be replaced with a straight in_array()
 * @return bool
 *   Returns true if any elements from active parents are in active term list.
 */
function is_parent_active($active_parents, $active_term_list) {
  foreach ($active_parents as $active_parent) {
    if (in_array($active_parent, $active_term_list)) {
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Returns name of current section of website.
 * @return string
 *   current website section
 */
function asc_get_active_section() {
  $section = explode($_GET['q']),'/';
  array_pop($section);
  $new_section = implode('/', $section);

  return $new_section;
}

/**
 * Returns array of current filter ids.
 * @return array
 *   of current filter ids.
 */
function asc_get_active_terms() {
  $terms = explode($_GET['q']),'/';
  $term_list = explode('+', end($terms))
  return $term_list;
}
